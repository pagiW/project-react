{"version":3,"sources":["components/Header.jsx","containers/Form.jsx","actions/index.js","containers/Home.jsx","App.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["connect","state","user","props","className","Object","keys","length","name","email","mapDispatchToProps","reqLog","payload","type","useState","form","setForm","handleChange","e","target","value","onSubmit","preventDefault","history","push","autoComplete","onChange","required","Home","to","App","exact","path","component","Form","reducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"4RAkBeA,G,MAAAA,aAJS,SAACC,GAAD,MAAY,CAChCC,KAAMD,EAAMC,QAGwB,KAAzBF,EAdA,SAACG,GAAW,IACfD,EAASC,EAATD,KACR,OACI,mCACI,oBAAIE,UAAU,KAAd,2BACA,oBAAIA,UAAU,KAAd,SAAoBC,OAAOC,KAAKJ,GAAMK,OAAS,EAA3B,UAAkCL,EAAKM,KAAvC,YAA+CN,EAAKO,OAAU,qB,uBCqBxFC,G,MAAqB,CACvBC,OC/BkB,SAACC,GAAD,MAAc,CAChCC,KAAM,UACND,cDgCWZ,cAAQ,KAAMU,EAAdV,EA7BF,SAAAG,GAAU,IAAD,EACQW,mBAAS,IADjB,mBACVC,EADU,KACJC,EADI,KAEZC,EAAe,SAACC,GAClBF,EAAQ,2BACDD,GADA,kBAEFG,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,UAQlC,OACI,+BACI,uBAAMC,SAPO,SAACH,GAClBA,EAAEI,iBACFnB,EAAMQ,OAAOI,GACbZ,EAAMoB,QAAQC,KAAK,mBAIf,UACI,uBAAOX,KAAK,OAAOL,KAAK,QAAQiB,aAAa,QAAQC,SAAUT,EAAcU,UAAQ,IACrF,uBAAOd,KAAK,OAAOL,KAAK,OAAOiB,aAAa,OAAOC,SAAUT,EAAcU,UAAQ,IACnF,uBAAOd,KAAK,WAAWL,KAAK,WAAWiB,aAAa,WAAWC,SAAUT,EAAcU,UAAQ,IAC/F,wBAAQd,KAAK,SAAb,0BEXDe,G,MATF,WACT,OACI,iCACI,kDACA,cAAC,IAAD,CAAMC,GAAG,aAAT,sC,MCUGC,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAWL,IAC9C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,2BAA2BC,UAAWC,WCCjDC,EAbE,SAAClC,EAAOmC,GACrB,OAAQA,EAAOvB,MACX,IAAK,UACD,OAAO,2BACAZ,GADP,IAEIC,KAAMkC,EAAOxB,UAErB,QACI,OAAO,eACAX,KCGJoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKRQ,EAAQC,YAAYZ,EAJZ,CACZ,KAAQ,KAKVa,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.6bf23068.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/header.css';\n\nconst Header = (props) => {\n    const { user } = props;\n    return (\n        <header>\n            <h1 className='h1'>Project React</h1>\n            <h1 className='h1'>{Object.keys(user).length > 0 ? `${user.name} ${user.email}` : 'your name'}</h1>\n        </header>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\n\nexport default connect(mapStateToProps, null)(Header);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reqLog } from '../actions/index';\nimport '../styles/form.css';\n\nconst Form = props => {\n    const [ form, setForm ] = useState({});\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.reqLog(form);\n        props.history.push('/project-react');\n    }\n    return (\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type='text' name='email' autoComplete='email' onChange={handleChange} required />\n                <input type='text' name='name' autoComplete='name' onChange={handleChange} required />\n                <input type='password' name='password' autoComplete='password' onChange={handleChange} required />\n                <button type='submit'>Send</button>\n            </form>\n        </main>\n    );\n}\n\nconst mapDispatchToProps = {\n    reqLog,\n}\n\nexport default connect(null, mapDispatchToProps)(Form);","export const reqLog = (payload) => ({\n    type: 'REQ_LOG',\n    payload,\n});","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/home.css'\n\nconst Home = () => {\n    return (\n        <main>\n            <h1>hello, welcome!!</h1>\n            <Link to='/formulary'>Go to the formulary</Link>\n        </main>\n    )\n}\n\nexport default Home;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport Form from './containers/Form';\nimport Home from './containers/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path='/project-react' component={Home} />\n        <Route exact path='/project-react/formulary' component={Form} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reducers = (state, action) => {\n    switch (action.type) {\n        case 'REQ_LOG':\n            return {\n                ...state,\n                user: action.payload,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\nexport default reducers;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst datas = {\n  \"user\": {}\n}\n\nconst store = createStore(reducers, datas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}